generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Decision {
  id                           String    @id
  agendaPointId                String?   @map("agenda_point_id")
  caseId                       String?   @map("case_id")
  votingType                   String?   @map("voting_type")
  decisionType                 String?   @map("decision_type")
  decisionText                 String?   @map("decision_text")
  comment                      String?
  status                       String?
  agendaPointCaseDecisionOrder BigInt?   @map("agenda_point_case_decision_order")
  updatedAt                    DateTime? @map("updated_at") @db.Timestamptz(6)
  apiUpdatedAt                 DateTime? @map("api_updated_at") @db.Timestamptz(6)

  @@index([caseId], map: "idx_decisions_case_id")
  @@map("decisions")
}

model Party {
  id            String    @id
  number        BigInt?
  shortName     String?   @map("short_name")
  nameNl        String?   @map("name_nl")
  nameEn        String?   @map("name_en")
  seats         BigInt?
  votesCount    BigInt?   @map("votes_count")
  activeFrom    DateTime? @map("active_from") @db.Timestamptz(6)
  activeTo      DateTime? @map("active_to") @db.Timestamptz(6)
  contentType   String?   @map("content_type")
  contentLength BigInt?   @map("content_length")
  updatedAt     DateTime? @map("updated_at") @db.Timestamptz(6)
  apiUpdatedAt  DateTime? @map("api_updated_at") @db.Timestamptz(6)
  logoData      Bytes?    @map("logo_data")
  removed       Boolean?

  @@map("parties")
}

model ParliamentaryDocument {
  id                    String                      @id
  number                String?
  title                 String?
  citationTitle         String?                     @map("citation_title")
  alias                 String?
  addition              String?
  highestSequenceNumber BigInt?                     @map("highest_sequence_number")
  closed                Boolean?
  createdAt             DateTime?                   @map("created_at") @db.Timestamptz(6)
  closedAt              DateTime?                   @map("closed_at") @db.Timestamptz(6)
  chamber               String?
  updatedAt             DateTime?                   @map("updated_at") @db.Timestamptz(6)
  apiUpdatedAt          DateTime?                   @map("api_updated_at") @db.Timestamptz(6)
  bulletPoints          Json?                       @map("bullet_points")
  documentURL           String?                     @map("document_url")
  cases                 CaseParliamentaryDocument[]

  @@map("parliamentary_documents")
}

model CaseParliamentaryDocument {
  parliamentaryDocumentId String                @map("parliamentary_document_id")
  caseId                  String                @map("case_id")
  parliamentaryDocument   ParliamentaryDocument @relation(fields: [parliamentaryDocumentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_case_parliamentary_documents_document")
  case                    Case                  @relation(fields: [caseId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_case_parliamentary_documents_case")

  @@id([parliamentaryDocumentId, caseId])
  @@map("case_parliamentary_documents")
}

model Politician {
  id           String    @id
  titles       String?
  initials     String?
  prefix       String?
  lastName     String?   @map("last_name")
  firstNames   String?   @map("first_names")
  nickname     String?
  gender       String?
  birthDate    DateTime? @map("birth_date") @db.Timestamptz(6)
  birthPlace   String?   @map("birth_place")
  birthCountry String?   @map("birth_country")
  deathDate    DateTime? @map("death_date") @db.Timestamptz(6)
  deathPlace   String?   @map("death_place")
  deathCountry String?   @map("death_country")
  residence    String?
  country      String?
  updatedAt    DateTime? @map("updated_at") @db.Timestamptz(6)

  @@map("politicians")
}

model Vote {
  id              String    @id
  decisionIdRaw   String?   @map("decision_id_raw")
  decisionId      String?   @map("decision_id")
  type            String?
  partySize       BigInt?   @map("party_size")
  actorName       String?   @map("actor_name")
  actorParty      String?   @map("actor_party")
  mistake         Boolean?
  sidActorMember  String?   @map("sid_actor_member")
  sidActorParty   String?   @map("sid_actor_party")
  politicianIdRaw String?   @map("politician_id_raw")
  politicianId    String?   @map("politician_id")
  partyIdRaw      String?   @map("party_id_raw")
  partyId         String?   @map("party_id")
  updatedAt       DateTime? @map("updated_at") @db.Timestamptz(6)
  apiUpdatedAt    DateTime? @map("api_updated_at") @db.Timestamptz(6)

  @@index([decisionId], map: "idx_votes_decision_id")
  @@index([partyId], map: "idx_votes_party_id")
  @@index([politicianId], map: "idx_votes_politician_id")
  @@map("votes")
}

model CaseActor {
  id           String    @id
  caseId       String?   @map("case_id")
  politicianId String?   @map("politician_id")
  partyId      String?   @map("party_id")
  relation     String?
  actorName    String?   @map("actor_name")
  actorParty   String?   @map("actor_party")
  updatedAt    DateTime? @map("updated_at") @db.Timestamptz(6)

  @@index([partyId], map: "idx_case_actors_party_id")
  @@index([politicianId], map: "idx_case_actors_politician_id")
  @@index([caseId], map: "idx_case_actors_case_id")
  @@map("case_actors")
}

model Case {
  id                     String                      @id
  number                 String?
  subject                String?
  type                   String?
  title                  String?
  citationTitle          String?                     @map("citation_title")
  alias                  String?
  status                 String?
  date                   DateTime?                   @db.Timestamptz(6)
  startedAt              DateTime?                   @map("started_at") @db.Timestamptz(6)
  organization           String?
  basis                  String?
  term                   String?
  meetingYear            String?                     @map("meeting_year")
  sequenceNumber         BigInt?                     @map("sequence_number")
  currentTreatmentStatus String?                     @map("current_treatment_status")
  completed              Boolean?
  largeProject           Boolean?                    @map("large_project")
  updatedAt              DateTime?                   @map("updated_at") @db.Timestamptz(6)
  apiUpdatedAt           DateTime?                   @map("api_updated_at") @db.Timestamptz(6)
  removed                Boolean?
  cabinetAppreciation    String?                     @map("cabinet_appreciation")
  completedAt            DateTime?                   @map("completed_at") @db.Timestamptz(6)
  chamber                String?
  bulletPoints           Json?                       @map("bullet_points")
  documentURL            String?                     @map("document_url")
  did                    String?
  parliamentaryDocuments CaseParliamentaryDocument[]
  caseCategories         CaseCategories[]

  @@map("cases")
}

model MotionCategory {
  id          String           @id
  name        String           @unique(map: "idx_motion_categories_name")
  type        String?
  description String?
  keywords    String[]
  createdAt   DateTime?        @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?        @map("updated_at") @db.Timestamptz(6)
  cases       CaseCategories[]

  @@map("motion_categories")
}

model CaseCategories {
  caseId     String         @map("case_id")
  categoryId String         @map("category_id")
  createdAt  DateTime?      @map("created_at") @db.Timestamptz(6)
  case       Case           @relation(fields: [caseId], references: [id])
  category   MotionCategory @relation(fields: [categoryId], references: [id])

  @@id([caseId, categoryId])
  @@map("case_categories")
}

model UserSession {
  id        String   @id @default(cuid())
  answers   Json
  results   Json?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_sessions")
}
