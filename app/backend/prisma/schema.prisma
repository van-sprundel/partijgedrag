generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model besluiten {
  id                               String    @id
  agendapunt_id                    String?
  zaak_id                          String?
  stemmings_soort                  String?
  besluit_soort                    String?
  besluit_tekst                    String?
  opmerking                        String?
  status                           String?
  agendapunt_zaak_besluit_volgorde BigInt?
  gewijzigd_op                     DateTime? @db.Timestamptz(6)
  api_gewijzigd_op                 DateTime? @db.Timestamptz(6)
  verwijderd                       Boolean?

  zaak       zaken?       @relation("ZaakBesluiten", fields: [zaak_id], references: [id])
  stemmingen stemmingen[]

  @@index([zaak_id], map: "idx_besluiten_zaak_id")
}

model document_info {
  id             BigInt    @id @default(autoincrement())
  dossier_nummer String?
  volgnummer     BigInt?
  url            String?
  content        Json?
  fetched_at     DateTime? @db.Timestamptz(6)
  success        Boolean?
  error          String?

  @@unique([dossier_nummer, volgnummer], map: "idx_document_unique")
  @@index([dossier_nummer], map: "idx_document_info_dossier_nummer")
}

model fracties {
  id               String    @id
  nummer           BigInt?
  afkorting        String?
  naam_nl          String?
  naam_en          String?
  aantal_zetels    BigInt?
  aantal_stemmen   BigInt?
  datum_actief     DateTime? @db.Timestamptz(6)
  datum_inactief   DateTime? @db.Timestamptz(6)
  content_type     String?
  content_length   BigInt?
  gewijzigd_op     DateTime? @db.Timestamptz(6)
  api_gewijzigd_op DateTime? @db.Timestamptz(6)
  verwijderd       Boolean?

  stemmingen stemmingen[]
}

model kamerstukdossiers {
  id                 String    @id
  zaak_id            String?
  nummer             String?
  titel              String?
  citeertitel        String?
  alias              String?
  toevoeging         String?
  hoogste_volgnummer BigInt?
  afgesloten         Boolean?
  datum_aangemaakt   DateTime? @db.Timestamptz(6)
  datum_gesloten     DateTime? @db.Timestamptz(6)
  kamer              String?
  bijgewerkt         DateTime? @db.Timestamptz(6)
  api_gewijzigd_op   DateTime? @db.Timestamptz(6)
  verwijderd         Boolean?
  bullet_points      Json?

  zaak zaken? @relation("ZaakKamerstukdossiers", fields: [zaak_id], references: [id])

  @@index([zaak_id], map: "idx_kamerstukdossiers_zaak_id")
}

model personen {
  id                String    @id
  titels            String?
  initialen         String?
  tussenvoegsel     String?
  achternaam        String?
  voornamen         String?
  roepnaam          String?
  geslacht          String?
  geboortedatum     DateTime? @db.Timestamptz(6)
  geboorteplaats    String?
  geboorteland      String?
  overlijdensdatum  DateTime? @db.Timestamptz(6)
  overlijdensplaats String?
  overlijdensland   String?
  woonplaats        String?
  land              String?
  bijgewerkt        DateTime? @db.Timestamptz(6)
  verwijderd        Boolean?

  stemmingen stemmingen[]
}

model stemmingen {
  id                String    @id
  besluit_id_raw    String?
  besluit_id        String?
  soort             String?
  fractie_grootte   BigInt?
  actor_naam        String?
  actor_fractie     String?
  vergissing        Boolean?
  sid_actor_lid     String?
  sid_actor_fractie String?
  persoon_id_raw    String?
  persoon_id        String?
  fractie_id_raw    String?
  fractie_id        String?
  gewijzigd_op      DateTime? @db.Timestamptz(6)
  api_gewijzigd_op  DateTime? @db.Timestamptz(6)
  verwijderd        Boolean?

  besluit besluiten? @relation(fields: [besluit_id], references: [id])
  persoon personen?  @relation(fields: [persoon_id], references: [id])
  fractie fracties?  @relation(fields: [fractie_id], references: [id])

  @@index([besluit_id], map: "idx_stemmingen_besluit_id")
  @@index([fractie_id], map: "idx_stemmingen_fractie_id")
  @@index([persoon_id], map: "idx_stemmingen_persoon_id")
}

model zaak_actors {
  id            String    @id
  zaak_id       String?
  persoon_id    String?
  fractie_id    String?
  relatie       String?
  actor_naam    String?
  actor_fractie String?
  bijgewerkt    DateTime? @db.Timestamptz(6)
  verwijderd    Boolean?

  @@index([fractie_id], map: "idx_zaak_actors_fractie_id")
  @@index([persoon_id], map: "idx_zaak_actors_persoon_id")
  @@index([zaak_id], map: "idx_zaak_actors_zaak_id")
}

model zaak_documents {
  id          BigInt    @id @default(autoincrement())
  zaak_id     String?
  document_id BigInt?
  created_at  DateTime? @db.Timestamptz(6)

  @@unique([zaak_id, document_id], map: "idx_zaak_document")
  @@index([document_id], map: "idx_zaak_documents_document_id")
  @@index([zaak_id], map: "idx_zaak_documents_zaak_id")
}

model zaken {
  id                     String    @id
  nummer                 String?
  onderwerp              String?
  soort                  String?
  titel                  String?
  citeertitel            String?
  alias                  String?
  status                 String?
  datum                  DateTime? @db.Timestamptz(6)
  gestart_op             DateTime? @db.Timestamptz(6)
  organisatie            String?
  grondslagvoorhang      String?
  termijn                String?
  vergaderjaar           String?
  volgnummer             BigInt?
  huidige_behandelstatus String?
  afgedaan               Boolean?
  groot_project          Boolean?
  gewijzigd_op           DateTime? @db.Timestamptz(6)
  api_gewijzigd_op       DateTime? @db.Timestamptz(6)
  verwijderd             Boolean?
  kabinetsappreciatie    String?
  datum_afgedaan         DateTime? @db.Timestamptz(6)
  kamer                  String?

  besluiten         besluiten[]         @relation("ZaakBesluiten")
  kamerstukdossiers kamerstukdossiers[] @relation("ZaakKamerstukdossiers")
}

model user_sessions {
  id        String   @id @default(cuid())
  answers   Json
  results   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
